<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <LangVersion>7.3</LangVersion>

    <Authors>David Lewis</Authors>
    <Company>David Lewis</Company>
    <Description>
      # DiscriminatedUnion
      Implementation of Discriminated Union and Pattern Matching in C#.

      ```csharp
      string outputValue = x.Match&lt;String&gt;()
      .Case(c =&gt; c == "Test", v =&gt; "It's Test!")
      .Case(v =&gt; "It's Not Test!")
      .Else(() =&gt; "It's None!")
      ```
      or
      ```csharp
      var x = new Union&lt;string, int&gt;(100);

      // the type annotations below are optional and only added for clerity.
      string value = x.Match&lt;string&gt;()
      .Case((string v) =&gt; v)
      .Case((int c) =&gt; c == 100, (int v) =&gt; "Keeping It 100.")
      .Case((int v) =&gt; "Tea?")
      .Else(() =&gt; "Nothing");

      Assert.Equal("Keeping It 100.", value);
      ```
    </Description>
    <Copyright>2018 David Lewis</Copyright>
    <PackageLicenseUrl></PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/sdedalus/DiscriminatedUnion</PackageProjectUrl>
    <RepositoryUrl>https://github.com/sdedalus/DiscriminatedUnion</RepositoryUrl>
    <RepositoryType>Git</RepositoryType>
    <PackageTags>Discriminated, Union, Standard, Functional, Type</PackageTags>
    <PackageReleaseNotes>Updated the project to .Net Standard 1.1</PackageReleaseNotes>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <AssemblyVersion>2.0.0.1</AssemblyVersion>
    <FileVersion>2.0.0.1</FileVersion>
    <LangVersion>7.3</LangVersion>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
  </PropertyGroup>

  <ItemGroup>
    <Compile Update="CreateMap.cs">
      <DependentUpon>CreateMap.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="ICase.cs">
      <DependentUpon>ICase.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Match.cs">
      <DependentUpon>Match.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="ToErrorUnion.cs">
      <DependentUpon>ToErrorUnion.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="ToUnionOfSubTypes.cs">
      <DependentUpon>ToUnionOfSubTypes.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Union.cs">
      <DependentUpon>Union.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <None Update="CreateMap.tt">
      <LastGenOutput>CreateMap.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="ICase.tt">
      <LastGenOutput>ICase.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Match.tt">
      <LastGenOutput>Match.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="ToErrorUnion.tt">
      <LastGenOutput>ToErrorUnion.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="ToUnionOfSubTypes.tt">
      <LastGenOutput>ToUnionOfSubTypes.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Union.tt">
      <LastGenOutput>Union.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Include="..\LICENSE">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>

</Project>
